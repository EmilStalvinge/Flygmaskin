/*
 * 20161129_m328_tinyrtc.c
 *
 * Created: 2016-11-29 10:19:21
 * Author : uwezi
 */ 
#define F_CPU 8000000UL
#include <avr/io.h>
#include <stdio.h>
#include <avr/pgmspace.h>
#include <util/delay.h>
#include <util/atomic.h>
#include "i2cmaster.h"
#include "lcd.h"

/* Unsigned 8-bit BCD operations. */
// in BCD each half of an 8-bit unsigned integer represents one digit from 0-9
// similar to hexadecimal coding, but the higher bit combinations 1010 to 1111 
// are not used
#define fromBCD(x) (((x) >> 4) * 10 + ((x) & 0xF))
#define toBCD(x)   ((((x) / 10) << 4) | ((x) % 10))



// hardware I2C address
#define MPU6050_ADDR  (0x68 << 1)   

// definition of the DS1307 hardware registers - eight 8-bit registers
enum {axh, axl, ayh, ayl, azh, azl, DSREGS};

// memory copy of the DS1307 registers
uint8_t DS1307_regs[DSREGS];

//
// Dallas DS1307 RTC Hardware routines
//

// read the eight registers from the DS1307 into the memory
void DS1307read(void)
{
  uint8_t i;
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
  {
                             // set stop condition = release bus
    /* Commence the read. */
    i2c_start_wait(MPU6050_ADDR+I2C_WRITE);   // est device address and write mode
    i2c_write(0x43);                         // wake up sensor
                            // set stop condition = release bus
    /* Commence the read. */
    _delay_us(20);
    i2c_start_wait(MPU6050_ADDR+I2C_READ);
    for (i=0; i<(DSREGS-1); i++)
    {
      _delay_us(10);
      DS1307_regs[i] = i2c_read(1);
    }
    _delay_us(10);
    DS1307_regs[DSREGS-1] = i2c_read(0);
    i2c_stop();
  }
}

// write the contents of the memory into the eight hardware registers of the DS1307
void DS1307write(void)
{
  uint8_t i;
  ATOMIC_BLOCK(ATOMIC_RESTORESTATE)
  {
    i2c_start_wait(MPU6050_ADDR+I2C_WRITE);
    i2c_write(0x00);  //start address
    for (i=0; i<DSREGS; i++)
    {
      i2c_write(DS1307_regs[i]);
    }
    i2c_stop();
  }
}

void init()
{
  int8_t i;
  
  lcd_init(LCD_DISP_ON);
  lcd_clrscr();
  lcd_gotoxy(1,0);
  lcd_puts_P("Accel X led");
  _delay_ms(1000);
lcd_clrscr();
  i2c_init();
  
      i2c_start_wait(MPU6050_ADDR+I2C_WRITE);   // est device address and write mode
    _delay_us(20);
      i2c_write(0x6b);                         // wake up sensor
    _delay_us(20);
      i2c_write(0x00);                         // wake up sensor
      i2c_stop();
	  
  //DS1307read();
  
}

//void initSensor()


int main(void)
{
  uint8_t a_x_l, a_x_h;
  char buffer[20];
  init();
  
  while (1) 
  {
    DS1307read();
    a_x_h  = fromBCD(DS1307_regs[axh]);
    a_x_l  = fromBCD(DS1307_regs[axl]);
   
    sprintf(buffer, "%02d : %02d",a_x_l,a_x_h);
    lcd_gotoxy(0,1);
    lcd_puts(buffer);
    _delay_ms(100);
  }
}

