#define  F_CPU 1000000UL
#include <avr/io.h>
#include <util/delay.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <avr/interrupt.h>


void init(void)
{
	
	DDRB |= (1 << PB1)|(1 << PB0);

	OCR1A = 62.5;
	// set PWM to 0% power


	TCCR1A |= (1 << COM0A1);
	// set none-inverting mode

	TCCR1A |= (1 << WGM01) | (1 << WGM00);
	// set fast PWM Mode

	TCCR1B |= (1 << CS10);
	// set prescaler to 1 and starts PWM
	
	
	// ADC init
	//  reference voltage: supply AVCC
	//  channel ADC0
	//  clock: f_cpu/8  (=125kHz)
	//  right-aligned result
	
	ADMUX  = (0 << REFS1) | (1 << REFS0) | (0 << ADLAR)
	| (0 << MUX3)  | (0 << MUX2)  | (0 << MUX1) | (0 << MUX0);
	ADCSRA = (1 << ADEN) | (1 << ADSC)  | (0 << ADATE)
	| (0 << ADPS2) | (1 << ADPS1) | (1 << ADPS0);
	

}


int main(void)
{
	uint16_t value=0;
	init();
	_delay_ms(2000);

	while (1)
	{
		
		ADCSRA |= (1 << ADSC);         // start conversion
		while (ADCSRA & (1 << ADSC)) ; // wait for finish
		value=ADC/8;
		if (value < 62.5)
		{
			value = 62.5;
			
		}
		OCR1A=value;
		

		
		
		//	PORTB = PORTB | (1 << PB0);
		//	_delay_ms(2000);
		//	OCR1A = 62.5*(0.1+1);         //set pwm
		//	PORTB = PORTB ^ (1 << PB0);
		//	_delay_ms(2000);
		//	OCR1A = 62.5*(0.2+1);          //set pwm
		//	PORTB = PORTB ^ (1 << PB0);
		//	_delay_ms(2000);
		//	OCR1A = 62.5*(0.3+1);         // set pwm
		//	PORTB = PORTB ^ (1 << PB0);
		//	_delay_ms(1000);
		
	}
}
